#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# MIT License
#
# Copyright (c) 2017 Fabrizio Colonna <colofabrix@tin.it>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

from __future__ import print_function

import sys
import json
import argparse
import tempfile

from autolibs.packer import *
from autolibs.repository import *

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument(
        'environment',
        action='store',
        default=None,
        help="Target environment."
    )
    parser.add_argument(
        'aws_region',
        action='store',
        default=None,
        help="Target AWS region."
    )
    parser.add_argument(
        'packer_user',
        action='store',
        nargs='?',
        default='packer',
        help="User used by packer."
    )
    args = parser.parse_args()

    repo = RepoInfo()

    # Read all raw data
    state_file = repo.terraform.state_file(args.environment)
    with open(state_file) as data_file:
        raw_data = json.load(data_file)

    variables = {}

    variables.update(credentials.get(raw_data, args.aws_region, args.packer_user))
    variables.update(config_minimal.get(raw_data))
    variables.update(centos_release.get(raw_data))

    with tempfile.TemporaryFile(dir=repo.packer.image_base("centos7-aws-minimal")) as var_file:
        json.dump(variables, var_file)

    sys.exit(0)

# vim: ft=python:ts=4:sw=4